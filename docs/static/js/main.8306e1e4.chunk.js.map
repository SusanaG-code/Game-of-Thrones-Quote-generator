{"version":3,"sources":["components/Quotes.js","services/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Quotes","props","id","className","quote","character","name","house","onClick","ev","click","currentTarget","value","handleClick","fetch","then","response","json","data","catch","error","console","App","useState","setQuote","setCharacter","setHouse","useEffect","api","sentence","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yPAuCeA,G,MApCA,SAACC,GAMd,OACE,sBAAKC,GAAG,YAAYC,UAAU,YAA9B,UACE,qBAAKD,GAAG,OAAOC,UAAU,OAAzB,SACE,8BACE,sBAAMA,UAAU,cAAhB,oBACA,sBAAMA,UAAU,cAAhB,SAA+BF,EAAMG,aAGzC,qBAAKF,GAAG,SAASC,UAAU,SAA3B,SACE,8BACE,sBAAMA,UAAU,cAAhB,wBACA,sBAAMA,UAAU,cAAhB,SAA+BF,EAAMI,UAAUC,YAGnD,qBAAKJ,GAAG,QAAQC,UAAU,QAA1B,SACE,8BACE,sBAAMA,UAAU,cAAhB,oBACA,sBAAMA,UAAU,cAAhB,SAA+BF,EAAMM,aAIzC,qBAAKL,GAAG,UAAUC,UAAU,MAA5B,SACE,wBAAQD,GAAG,YAAYC,UAAU,gBAAgBK,QA3BnC,SAACC,GACnB,IAAMC,EAAQD,EAAGE,cAAcC,MAC/BX,EAAMY,YAAYH,IAyBd,SACE,sBAAMP,UAAU,WAAhB,gCCpBK,EAZQ,WACrB,OAAOW,MAAM,0DACVC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GACL,OAAOA,KAERC,OAAM,SAACC,GACNC,QAAQD,MAAM,4BAA6BA,O,MCkClCE,MApCf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNnB,EADM,KACCoB,EADD,OAEqBD,mBAAS,IAF9B,mBAENlB,EAFM,KAEKoB,EAFL,OAGaF,mBAAS,IAHtB,mBAGNhB,EAHM,KAGCmB,EAHD,KAmBb,OAdAC,qBAAU,WACRC,IAAqBb,MAAK,SAACG,GACzBM,EAASN,EAAKW,UACdJ,EAAaP,EAAKb,WAClBqB,EAASR,EAAKb,UAAUE,MAAMD,WAE/B,IASD,qBAAKH,UAAU,MAAf,SACE,sBAAKA,UAAU,WAAf,UACE,qBAAKA,UAAU,YAAf,SACE,oBAAIA,UAAU,QAAd,kDAEF,cAAC,EAAD,CACEC,MAAOA,EACPC,UAAWA,EACXE,MAAOA,EACPM,YAjBY,WAClBe,IAAqBb,MAAK,SAACG,GACzBM,EAASN,EAAKW,UACdJ,EAAaP,EAAKb,WAClBqB,EAASR,EAAKb,UAAUE,MAAMD,kBCTrBwB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjB,MAAK,YAAkD,IAA/CkB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8306e1e4.chunk.js","sourcesContent":["import React from \"react\";\nimport \"../stylesheets/Quotes.css\";\n\nconst Quotes = (props) => {\n  const handleClick = (ev) => {\n    const click = ev.currentTarget.value;\n    props.handleClick(click);\n  };\n\n  return (\n    <div id=\"quote-box\" className=\"quote-box\">\n      <div id=\"text\" className=\"text\">\n        <p>\n          <span className=\"title-quote\">Quote:</span>\n          <span className=\"description\">{props.quote}</span>\n        </p>\n      </div>\n      <div id=\"author\" className=\"author\">\n        <p>\n          <span className=\"title-quote\">Character:</span>\n          <span className=\"description\">{props.character.name}</span>\n        </p>\n      </div>\n      <div id=\"house\" className=\"house\">\n        <p>\n          <span className=\"title-quote\">House:</span>\n          <span className=\"description\">{props.house}</span>\n        </p>\n      </div>\n\n      <div id=\"buttons\" className=\"btn\">\n        <button id=\"new-quote\" className=\"new-quote-btn\" onClick={handleClick}>\n          <span className=\"btn-text\">New Quote</span>\n        </button>\n      </div>\n    </div>\n  );\n};\nQuotes.propTypes = {};\nexport default Quotes;\n","const getDataFromApi = () => {\n  return fetch(\"https://game-of-thrones-quotes.herokuapp.com/v1/random\")\n    .then((response) => response.json())\n    .then((data) => {\n      return data;\n    })\n    .catch((error) => {\n      console.error(\"Se ha producido un error:\", error);\n    });\n};\n\n// eslint-disable-next-line import/no-anonymous-default-export\nexport default {\n  getDataFromApi,\n};\n","import React, { useEffect, useState } from \"react\";\nimport Quotes from \"./Quotes\";\nimport api from \"../services/api\";\nimport \"../stylesheets/App.css\";\n\nfunction App() {\n  const [quote, setQuote] = useState(\"\");\n  const [character, setCharacter] = useState(\"\");\n  const [house, setHouse] = useState(\"\");\n\n  useEffect(() => {\n    api.getDataFromApi().then((data) => {\n      setQuote(data.sentence);\n      setCharacter(data.character);\n      setHouse(data.character.house.name);\n    });\n  }, []);\n  const handleClick = () => {\n    api.getDataFromApi().then((data) => {\n      setQuote(data.sentence);\n      setCharacter(data.character);\n      setHouse(data.character.house.name);\n    });\n  };\n  return (\n    <div className=\"App\">\n      <div className=\"main-box\">\n        <div className=\"title-box\">\n          <h1 className=\"title\">Choose yours Game of Thrones Quote</h1>\n        </div>\n        <Quotes\n          quote={quote}\n          character={character}\n          house={house}\n          handleClick={handleClick}\n        />\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}