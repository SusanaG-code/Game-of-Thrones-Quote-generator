{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/susanagonzalezvejo/Desktop/Adalab/ejercicios-de-Adalab/module-03-react/Quote-geneator-twitter-hooks/my-react-project/src/components/Quotes.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport twitterIcon from \"../images/twitterIcon.svg\";\nimport \"../stylesheets/Quotes.css\";\n\nconst Quotes = props => {\n  _s();\n\n  const [quote, setQuote] = useState([]);\n  const [character, setCharacter] = useState([]);\n  useEffect(() => {\n    getDataFromApi();\n  }, []);\n\n  const getDataFromApi = () => {\n    return fetch(\"https://game-of-thrones-quotes.herokuapp.com/v1/random\").then(response => response.json()).then(data => {\n      setQuote(data.sentence);\n      console.log();\n      setCharacter(data.character);\n    });\n  };\n\n  const handleClick = () => {\n    getDataFromApi();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"quote-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"text\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: quote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"author\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: character.chaacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"buttons\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"social-media\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"www.twitter.es\",\n          id: \"twet-quote\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"logo\",\n              src: twitterIcon,\n              alt: \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        id: \"new-quote\",\n        onClick: handleClick,\n        children: \"New Quote\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Quotes, \"K5YambFEQYagdD7icCW9p46JH2M=\");\n\n_c = Quotes;\nQuotes.propTypes = {};\nexport default Quotes;\n\nvar _c;\n\n$RefreshReg$(_c, \"Quotes\");","map":{"version":3,"sources":["/Users/susanagonzalezvejo/Desktop/Adalab/ejercicios-de-Adalab/module-03-react/Quote-geneator-twitter-hooks/my-react-project/src/components/Quotes.js"],"names":["React","useState","useEffect","Quotes","props","quote","setQuote","character","setCharacter","getDataFromApi","fetch","then","response","json","data","sentence","console","log","handleClick","chaacter","twitterIcon","propTypes"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;AAEA,OAAO,2BAAP;;AAEA,MAAMC,MAAM,GAAIC,KAAD,IAAW;AAAA;;AACxB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,SAAD,EAAYC,YAAZ,IAA4BP,QAAQ,CAAC,EAAD,CAA1C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdO,IAAAA,cAAc;AACf,GAFQ,EAEN,EAFM,CAAT;;AAGA,QAAMA,cAAc,GAAG,MAAM;AAC3B,WAAOC,KAAK,CAAC,wDAAD,CAAL,CACJC,IADI,CACEC,QAAD,IAAcA,QAAQ,CAACC,IAAT,EADf,EAEJF,IAFI,CAEEG,IAAD,IAAU;AACdR,MAAAA,QAAQ,CAACQ,IAAI,CAACC,QAAN,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR;AAEAT,MAAAA,YAAY,CAACM,IAAI,CAACP,SAAN,CAAZ;AACD,KAPI,CAAP;AAQD,GATD;;AAUA,QAAMW,WAAW,GAAG,MAAM;AACxBT,IAAAA,cAAc;AACf,GAFD;;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,WAAR;AAAA,4BACE;AAAK,MAAA,EAAE,EAAC,MAAR;AAAA,6BACE;AAAA,kBAAIJ;AAAJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,EAAE,EAAC,QAAR;AAAA,6BACE;AAAA,kBAAIE,SAAS,CAACY;AAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF,eAQE;AAAK,MAAA,EAAE,EAAC,SAAR;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,+BACE;AAAG,UAAA,IAAI,EAAC,gBAAR;AAAyB,UAAA,EAAE,EAAC,YAA5B;AAAA,iCACE;AAAA,mCACE;AAAK,cAAA,SAAS,EAAC,MAAf;AAAsB,cAAA,GAAG,EAAEC,WAA3B;AAAwC,cAAA,GAAG,EAAC;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAQE;AAAQ,QAAA,EAAE,EAAC,WAAX;AAAuB,QAAA,OAAO,EAAEF,WAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cARF;AAAA;AAAA;AAAA;AAAA;AAAA,YARF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAuBD,CA5CD;;GAAMf,M;;KAAAA,M;AA6CNA,MAAM,CAACkB,SAAP,GAAmB,EAAnB;AACA,eAAelB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport twitterIcon from \"../images/twitterIcon.svg\";\nimport \"../stylesheets/Quotes.css\";\n\nconst Quotes = (props) => {\n  const [quote, setQuote] = useState([]);\n  const [character, setCharacter] = useState([]);\n\n  useEffect(() => {\n    getDataFromApi();\n  }, []);\n  const getDataFromApi = () => {\n    return fetch(\"https://game-of-thrones-quotes.herokuapp.com/v1/random\")\n      .then((response) => response.json())\n      .then((data) => {\n        setQuote(data.sentence);\n        console.log();\n\n        setCharacter(data.character);\n      });\n  };\n  const handleClick = () => {\n    getDataFromApi();\n  };\n\n  return (\n    <div id=\"quote-box\">\n      <div id=\"text\">\n        <p>{quote}</p>\n      </div>\n      <div id=\"author\">\n        <p>{character.chaacter}</p>\n      </div>\n\n      <div id=\"buttons\">\n        <div className=\"social-media\">\n          <a href=\"www.twitter.es\" id=\"twet-quote\">\n            <span>\n              <img className=\"logo\" src={twitterIcon} alt=\"\" />\n            </span>\n          </a>\n        </div>\n        <button id=\"new-quote\" onClick={handleClick}>\n          New Quote\n        </button>\n      </div>\n    </div>\n  );\n};\nQuotes.propTypes = {};\nexport default Quotes;\n"]},"metadata":{},"sourceType":"module"}